00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000020 00000001 B CTRPluginFramework::PrivColor::_useClamp
00000024 00000008 B CTRPluginFramework::Renderer::_rendererContext
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700133c 00000270 T CTRPluginFramework::enkaunto(CTRPluginFramework::MenuEntry*)
070015ac 0000003c T CTRPluginFramework::bike(CTRPluginFramework::MenuEntry*)
070015e8 0000003c T CTRPluginFramework::walk(CTRPluginFramework::MenuEntry*)
07001624 000003e4 T CTRPluginFramework::colorchange(CTRPluginFramework::MenuEntry*)
07001a08 00000040 T CTRPluginFramework::ngword(CTRPluginFramework::MenuEntry*)
07001a48 000002ec T CTRPluginFramework::hankaku(CTRPluginFramework::MenuEntry*)
07001d34 00000020 T CTRPluginFramework::tncha(CTRPluginFramework::MenuEntry*)
07001d54 00000138 T CTRPluginFramework::akabou(CTRPluginFramework::MenuEntry*)
07001e8c 00000054 T CTRPluginFramework::clash(CTRPluginFramework::MenuEntry*)
07001ee0 00000020 T CTRPluginFramework::opinf(CTRPluginFramework::MenuEntry*)
07001f00 00000020 T CTRPluginFramework::clearhistory(CTRPluginFramework::MenuEntry*)
07001f20 00000078 T CTRPluginFramework::nice99999(CTRPluginFramework::MenuEntry*)
07001f98 00000024 T CTRPluginFramework::nicehatena(CTRPluginFramework::MenuEntry*)
07001fbc 00000078 T CTRPluginFramework::birthday99999(CTRPluginFramework::MenuEntry*)
07002034 00000024 T CTRPluginFramework::birthdayhatena(CTRPluginFramework::MenuEntry*)
07002058 00000078 T CTRPluginFramework::batllewon(CTRPluginFramework::MenuEntry*)
070020d0 00000078 T CTRPluginFramework::trade(CTRPluginFramework::MenuEntry*)
07002148 0000001c T CTRPluginFramework::gtsup(CTRPluginFramework::MenuEntry*)
07002164 00000024 T CTRPluginFramework::gtszorua(CTRPluginFramework::MenuEntry*)
07002188 00000020 T CTRPluginFramework::gtsgender(CTRPluginFramework::MenuEntry*)
070021a8 00000020 T CTRPluginFramework::gtslevel(CTRPluginFramework::MenuEntry*)
070021c8 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07002234 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070022b8 00000060 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07002318 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
07002374 000009a0 T CTRPluginFramework::InitMenu()
07002d14 000007e0 T CTRPluginFramework::main()
070034f4 000000a0 t _GLOBAL__sub_I__ZN18CTRPluginFramework9CTRPFnameB5cxx11E
07003594 00000058 t _GLOBAL__sub_D__ZN18CTRPluginFramework9CTRPFnameB5cxx11E
070035ec 00000244 t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
07003830 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07003888 00000020 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
070038a8 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
070038d0 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
07003930 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned int)
07003958 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07003a10 0000008c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07003a9c 00000280 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07003d1c 00000178 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07003e94 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07003f18 00000378 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07004290 00000238 T CTRPluginFramework::Screenshot::UpdateFileCount()
070044c8 00000048 T CTRPluginFramework::Screenshot::Initialize()
07004510 0000006c t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0700457c 0000007c t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
070045f8 000000ac T CTRPluginFramework::SystemImpl::Initialize()
070046a4 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
070046f4 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
0700470c 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
07004728 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
07004764 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
07004784 00000044 T CTRPluginFramework::SystemImpl::Status()
070047c8 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
070047ec 0000006c T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
070047ec 0000006c T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07004858 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
07004958 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
070049a8 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
07004a88 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
07004ae4 00000028 T CTRPluginFramework::ScreenImpl::Release()
07004b0c 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07004b7c 00000040 T CTRPluginFramework::ScreenImpl::Flush()
07004bbc 00000094 T CTRPluginFramework::ScreenImpl::Clear(bool)
07004c50 00000030 T CTRPluginFramework::ScreenImpl::Copy()
07004c80 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
07004d4c 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07004d54 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
07004db0 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07004e00 0000003c T CTRPluginFramework::ScreenImpl::Clean()
07004e3c 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
07004ec8 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
07004f38 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
07004f68 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
07004fc8 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
07004fdc 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
07004ff8 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
07005014 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
0700501c 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
07005024 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
0700502c 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
07005048 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
07005064 0000005c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
070050c0 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
070050ec 00000054 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
07005140 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0700519c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070051f4 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07005234 00000148 W std::__cxx11::to_string(unsigned long)
0700537c 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
07005430 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
07005488 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005488 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070054ec 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
07005520 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070055a0 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0700572c 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
070057a8 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070057a8 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005814 00000098 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07005814 00000098 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
070058ac 000000bc T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
070058ac 000000bc T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07005968 00000230 T CTRPluginFramework::SearchMenu::Update()
07005b98 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07005c0c 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07005c5c 00000040 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005c9c 00000148 T CTRPluginFramework::SearchMenu::_Export()
07005de4 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
07005f3c 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
07005f88 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0700602c 000005b0 T CTRPluginFramework::SearchMenu::Draw()
070065dc 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
070066f8 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07006c08 000000e4 T CTRPluginFramework::Converter::Converter()
07006c08 000000e4 T CTRPluginFramework::Converter::Converter()
07006cec 00000010 T CTRPluginFramework::Converter::Instance()
07006cfc 00000110 T CTRPluginFramework::Converter::_Draw()
07006e0c 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
07006e0c 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
07006e5c 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
07007084 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070070dc 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
070070dc 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07007120 0000001c T CTRPluginFramework::SubMenu::operator()()
07007140 000001f8 T CTRPluginFramework::SubMenu::Draw()
07007338 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07007418 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07007420 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0700743c 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
07007474 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007474 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070074f8 0000008c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007584 000001ac T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07007730 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07007730 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07007734 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07007734 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
07007738 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07007738 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0700773c 00000018 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
07007754 00000018 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0700776c 00000018 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
07007784 000001a8 T CTRPluginFramework::HexEditor::ByteView::Draw()
0700792c 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07007a68 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
07007b5c 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07007b9c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07007bf4 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07007c34 000000f4 T CTRPluginFramework::HexEditor::~HexEditor()
07007c34 000000f4 T CTRPluginFramework::HexEditor::~HexEditor()
07007d28 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
07007d44 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
07007d60 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07007dd4 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
07007e00 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07007e3c 00000010 T CTRPluginFramework::HexEditor::Refresh()
07007e4c 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
07007e90 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
07007ec8 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
07007ef4 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
07007f74 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0700800c 000000dc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
070080e8 000000cc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
070081b4 000000bc T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07008270 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
07008424 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
07008434 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
07008444 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
07008454 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
07008494 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
070084d4 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
07008540 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
07008614 00000108 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0700871c 0000002c W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07008748 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
070087a0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07008820 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
070089e8 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
07008acc 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
07008b84 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
07008de8 000002e4 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
07008de8 000002e4 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
070090cc 00000104 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070091d0 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
07009354 00000094 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
070093e8 00000274 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0700965c 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0700983c 000002b8 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
07009af4 00000068 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
07009b5c 00000180 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
07009cdc 000001c8 T CTRPluginFramework::HexEditor::_Update()
07009ea4 00000294 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0700a138 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .constprop.0]
0700a170 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700a1c8 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0700a1f0 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
0700a230 00000014 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.0]
0700a244 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0700a244 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0700a2c0 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0700a2c8 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
0700a2d0 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0700a2d8 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
0700a2e0 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0700a2e8 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
0700a2f0 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
0700a34c 000001c8 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0700a514 000004dc T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0700a9f0 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
0700abb4 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0700ac1c 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0700acac 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0700ad2c 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0700adb0 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0700af0c 0000016c T CTRPluginFramework::KeyboardImpl::_Update(float)
0700b078 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0700b0d8 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0700b14c 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
0700b1f4 0000054c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
0700b740 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0700b748 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0700b748 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
0700b770 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700b7e4 00000068 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
0700b84c 0000010c W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
0700b958 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
0700b984 00000108 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
0700ba8c 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
0700bab8 000002e0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
0700bd98 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0700bdfc 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0700be5c 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
0700be5c 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
0700bea0 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0700bef4 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [3]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0700bf48 00000058 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)(), (declval<int>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
0700bfa0 00000174 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0700c114 0000004c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0700c160 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0700c194 000001dc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c194 000001dc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c370 000001d0 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c370 000001d0 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c540 00000714 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0700cc54 0000007c T CTRPluginFramework::KeyboardImpl::operator()(int&)
0700ccd0 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0700ccfc 00000118 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
0700ce14 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0700cf20 000000d8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
0700cff8 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0700d574 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0700daf0 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0700dbc0 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
0700e47c 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0700e54c 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0700efa0 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0700efe0 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
0700f0ec 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0700f294 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
0700f2dc 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0700f330 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0700f380 000005ac T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0700f92c 00000368 T CTRPluginFramework::KeyboardImpl::Run()
0700fc94 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0700fc94 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0700fccc 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0700fcf8 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
0700fd0c 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
0700fd30 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0700fd70 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700fdc8 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0700fe08 00000038 W CTRPluginFramework::File::~File()
0700fe08 00000038 W CTRPluginFramework::File::~File()
0700fe40 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0700fe94 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
0700feb8 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
0700fee0 00000030 W CTRPluginFramework::ARCode::~ARCode()
0700fee0 00000030 W CTRPluginFramework::ARCode::~ARCode()
0700ff10 00000064 W std::__shared_count<(__gnu_cxx::_Lock_policy)0>::~__shared_count()
0700ff10 00000064 W std::__shared_count<(__gnu_cxx::_Lock_policy)0>::~__shared_count()
0700ff74 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
0700ffa8 00000014 t __tcf_0
0700ffbc 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0701003c 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
0701015c 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07010240 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701029c 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
070103b8 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070103b8 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
0701060c 000000c4 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.0]
070106d0 00000180 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07010850 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07010a1c 00000180 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07010b9c 00000120 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07010cbc 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
07010cf8 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
07010e44 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
07010e74 000000cc t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
07010f40 0000026c T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
070111ac 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07011278 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
07011434 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
070115d4 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07011638 00000050 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07011688 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07011688 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070116c4 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
070117fc 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07011978 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
070119d0 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07011b64 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07011b7c 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07011d3c 00000108 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07011e44 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07012004 00000108 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
0701210c 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07012194 00000224 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
070123b8 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
070123e4 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07012420 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0701245c 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07012498 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
070124d4 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07012510 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0701253c 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07012578 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
070125b4 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
070125f0 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0701262c 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
07012658 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
07012694 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
070126c0 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
070126ec 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
07012718 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
07012754 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07012780 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
070127bc 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
070127e8 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0701281c 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
07012858 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
07012884 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
070128c0 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
070128ec 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
07012918 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
07012944 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
07012970 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0701299c 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
070129c8 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
070129f4 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
07012a20 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07012a5c 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
07012a88 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
07012aa4 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
07012ad8 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07012c44 00000020 t __tcf_0
07012c64 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
07012e08 0000011c T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07012f24 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07012fb8 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0701305c 0000031c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07013378 00000050 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
070133c8 00000104 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
070134cc 0000003c t CTRPluginFramework::Line<int>& std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&) [clone .isra.0]
07013508 000001b0 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::_M_push_back_aux<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
070136b8 00000038 t CTRPluginFramework::Vector<int>& std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&) [clone .isra.0]
070136f0 0000069c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07013d8c 00000198 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07013f24 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07013fa8 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07014128 00000190 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070142b8 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07014358 000001e0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07014538 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07014568 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07014568 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07014624 00000028 T CTRPluginFramework::Window::~Window()
07014624 00000028 T CTRPluginFramework::Window::~Window()
0701464c 00000064 T CTRPluginFramework::Window::Draw() const
070146b0 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0701478c 00000018 T CTRPluginFramework::Window::DrawButton() const
070147a4 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
070147bc 00000018 T CTRPluginFramework::Window::MustClose() const
070147d4 00000028 T CTRPluginFramework::Window::Close() const
070147fc 00000004 T CTRPluginFramework::Window::GetRect() const
07014800 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
07014834 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
070148b4 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
070148d4 00000008 W CTRPluginFramework::Drawable::operator()()
070148dc 000000f8 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
070149d4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07014a2c 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07014a2c 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07014ab8 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07014ab8 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07014b70 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07014b70 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07014bfc 0000004c T CTRPluginFramework::TouchKey::Clear()
07014c48 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07014c48 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07014c68 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07014c88 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07014c90 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
07014c98 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07014d08 00000070 T CTRPluginFramework::TouchKey::Draw()
07014d78 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07014d80 00000108 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07014e88 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014e88 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014f5c 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07014f5c 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0701502c 00000178 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070151a4 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
070151c4 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
070151e4 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07015210 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07015244 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0701526c 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
07015294 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
070152b4 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
070152e4 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0701532c 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07015370 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
070154b4 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
070154e0 00000040 t __tls_init
070154e0 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
07015520 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0701556c 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07015608 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0701569c 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0701574c 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
07015808 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
070158c0 00000018 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
070158d8 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
070158fc 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07015920 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07015920 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07015958 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07015960 00000008 T CTRPluginFramework::BMPImage::Width() const
07015968 00000008 T CTRPluginFramework::BMPImage::Height() const
07015970 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07015978 00000010 T CTRPluginFramework::BMPImage::data() const
07015988 0000001c T CTRPluginFramework::BMPImage::end() const
070159a4 00000014 W CTRPluginFramework::BMPImage::DataClear()
070159b8 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
070159b8 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07015a44 00000034 T CTRPluginFramework::BMPImage::Unload()
07015a78 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07015ac0 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07015af0 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07015bc0 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
07015c2c 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07015c50 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07015d6c 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07015d6c 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07015dc0 000001d8 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07015f98 0000012c T CTRPluginFramework::BMPImage::OptimiseForRendering()
070160c4 000000c8 T CTRPluginFramework::BMPImage::Draw(int, int)
0701618c 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07016194 000000f0 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07016284 00000318 T CTRPluginFramework::BMPImage::_LoadBitmap()
0701659c 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701659c 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701664c 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
07016698 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
07016960 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
07016a24 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
07016b70 0000015c T CTRPluginFramework::Button::Draw()
07016ccc 00000070 T CTRPluginFramework::Button::operator()()
07016d3c 000001a8 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07016ee4 00000038 T CTRPluginFramework::Button::~Button()
07016ee4 00000038 T CTRPluginFramework::Button::~Button()
07016f1c 00000020 T CTRPluginFramework::Button::~Button()
07016f3c 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07016f3c 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070170d0 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070170d0 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070170f0 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070170f0 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07017188 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07017188 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0701719c 00000018 T CTRPluginFramework::Button::Enable(bool)
070171b4 00000010 T CTRPluginFramework::Button::Enable()
070171c4 00000010 T CTRPluginFramework::Button::Disable()
070171d4 00000010 T CTRPluginFramework::Button::Lock()
070171e4 00000010 T CTRPluginFramework::Button::Execute()
070171f4 00000018 T CTRPluginFramework::Button::SetState(bool)
0701720c 00000010 T CTRPluginFramework::Button::GetState() const
0701721c 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07017224 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
070172b8 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
0701731c 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
070173c8 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
070173f8 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
07017568 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
070175c0 0000012c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070175c0 0000012c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070176ec 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
070177cc 000000d0 T CTRPluginFramework::InstallOSD()
0701789c 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
07017948 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
07017948 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
07017970 00000008 W __gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > std::next<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, std::iterator_traits<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >::difference_type)
07017978 000000b4 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07017a2c 000001a4 T CTRPluginFramework::OSDImpl::Update()
07017bd0 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
07017c28 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
07017cf0 000005ec T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
070182dc 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07018368 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
070183fc 00000070 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0701846c 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
07018598 00000120 T CTRPluginFramework::Renderer::GetTextSize(char const*)
070186b8 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0701885c 000001cc T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07018a28 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07018a8c 0000023c T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
07018cc8 000005a4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
0701926c 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
070196f0 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07019764 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
070197d4 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
070197d4 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07019848 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
07019850 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
07019884 000000cc T CTRPluginFramework::TouchKeyString::Draw()
07019950 000000fc T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07019a4c 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07019a64 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
07019a78 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
07019a90 00000048 T CTRPluginFramework::TouchKeyString::operator()()
07019ad8 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
07019ae0 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07019ae0 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07019b8c 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07019c08 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07019c08 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07019c28 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07019c48 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07019cf0 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
07019d28 00000060 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07019d88 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07019d98 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07019da0 0000000c T CTRPluginFramework::NumericTextBox::Clear()
07019dac 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07019dac 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07019e14 000000f4 T CTRPluginFramework::NumericTextBox::operator()()
07019f08 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07019f18 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07019f8c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07019fe4 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
0701a01c 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0701a0c4 00000140 T ARM_Disasm::Decode01(unsigned long)
0701a204 00000028 T ARM_Disasm::Decode10(unsigned long)
0701a22c 00000078 T ARM_Disasm::Decode11(unsigned long)
0701a2a4 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
0701a2f8 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
0701a348 00000118 T ARM_Disasm::DecodeALU(unsigned long)
0701a460 000000c4 T ARM_Disasm::Decode00(unsigned long)
0701a524 00000030 T ARM_Disasm::Decode(unsigned long)
0701a554 0000011c W void std::vector<RegBlock, std::allocator<RegBlock> >::_M_realloc_insert<int&, int&>(__gnu_cxx::__normal_iterator<RegBlock*, std::vector<RegBlock, std::allocator<RegBlock> > >, int&, int&)
0701a670 0000003c t RegBlock& std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&) [clone .isra.0]
0701a6ac 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0701a72c 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
0701a760 0000033c T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
0701aa9c 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
0701ab14 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0701ab84 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
0701ac04 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0701b04c 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0701b26c 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
0701b310 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
0701b3d0 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0701b490 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
0701b540 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
0701b5d0 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0701b748 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0701b85c 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0701b8c0 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0701b954 0000034c T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
0701bca0 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0701bf9c 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0701c00c 00000158 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c164 00000360 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0701c4c4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701c51c 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0701c5ac 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0701c5e8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0701c5e8 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0701c60c 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0701c634 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0701c634 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0701c668 000000b0 T CTRPluginFramework::ARCodeContext::Clear()
0701c718 000000a0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0701c7b8 00000104 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0701c7b8 00000104 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0701c8bc 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0701c8bc 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0701c9e0 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701cad0 00000084 T CTRPluginFramework::ARCode::Update()
0701cb54 0000003c T CTRPluginFramework::ARCodeContext::Update()
0701cb90 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0701cc50 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
0701cc70 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .constprop.0] [clone .isra.0]
0701cc88 00000020 t __tcf_0
0701cca8 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0701ccd0 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0701cce8 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0701cd38 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701cd88 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701cdd0 00000054 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0701ce24 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0701ce24 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0701ce74 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0701ce94 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0701cf3c 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
0701cf7c 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0701cf7c 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0701cfa4 00000128 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0701d0cc 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0701d134 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701d224 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0701d328 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0701d338 00000174 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0701d4ac 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
0701d4fc 000004d8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0701d9d4 00000134 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0701db08 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
0701db50 000000f0 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0701dc40 00000744 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0701e384 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0701e3d4 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0701e3d4 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0701e44c 00000020 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0701e46c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e46c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701e4b8 00000068 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0701e520 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0701e5c8 00000130 T CTRPluginFramework::MenuEntryActionReplay::Update()
0701e6f8 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0701e788 00000154 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0701e8dc 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
0701e91c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701e974 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0701e99c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0701e99c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0701e99c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0701e99c 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0701e9e8 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ea2c 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0701ea2c 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0701ea4c 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0701ea80 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0701eae8 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0701eb48 00000040 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0701eb88 000001a4 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0701eb88 000001a4 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0701ed2c 000002bc T CTRPluginFramework::ARCodeEditor::_RenderTop()
0701efe8 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0701f044 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0701f094 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0701f13c 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0701f13c 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0701f1b4 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0701f1d0 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f20c 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0701f240 00001478 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
070206b8 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
07020744 00000068 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
070207ac 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
070207d0 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
070207f8 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
07020834 00000030 t __tcf_0
07020864 0000012c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
07020990 0000003c t CTRPluginFramework::ARCodeEditor::CodeLine& std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&) [clone .isra.0]
070209cc 000002f4 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07020cc0 00000690 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07021350 00000178 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
070214c8 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07021580 0000047c T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
070219fc 000003cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07021dc8 00000200 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07021fc8 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
07021ff4 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
070220fc 0000009c T CTRPluginFramework::Preferences::LoadBackgrounds()
07022198 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
070221f8 00000004 T CTRPluginFramework::Preferences::Initialize()
070221fc 00000200 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
070223fc 000000bc T CTRPluginFramework::Preferences::LoadSettings()
070224b8 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
07022514 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
070225d0 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
0702268c 00000160 T CTRPluginFramework::Preferences::WriteSettings()
070227ec 000000a0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
0702288c 00000208 t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
07022a94 000000f0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07022b84 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07022bb0 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07022bb0 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07022bdc 00000018 T CTRPluginFramework::LineReader::~LineReader()
07022bdc 00000018 T CTRPluginFramework::LineReader::~LineReader()
07022bf4 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07022c5c 00000100 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07022d5c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07022db4 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07022df4 000000c0 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07022eb4 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
07022eec 0000005c T CTRPluginFramework::InitializeRandomEngine()
07022f48 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07022fc8 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07023024 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
07023068 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
070230c4 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
07023144 00000124 T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
07023268 0000025c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070234c4 00000024 W std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> >::_M_dispose()
070234e8 00000174 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0702365c 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07023690 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070237d0 0000075c t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07023f2c 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07023f34 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07023f78 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07024040 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07024094 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07024114 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07024130 00000024 t __tcf_0
07024154 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
07024154 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702417c 0000004c T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
070241c8 00000048 T CTRPluginFramework::LineWriter::Flush()
07024210 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07024210 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702422c 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07024290 00000018 T CTRPluginFramework::LineWriter::Close()
070242a8 00000024 T CTRPluginFramework::ResetColor[abi:cxx11]()
070242cc 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070242f0 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07024314 00000080 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .constprop.0]
07024394 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070243ec 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07024430 00000048 T CTRPluginFramework::Directory::Close() const
07024478 00000008 T CTRPluginFramework::Directory::IsOpen() const
07024480 00000040 T CTRPluginFramework::Directory::Directory()
07024480 00000040 T CTRPluginFramework::Directory::Directory()
070244c0 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
070244c0 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
070244e8 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
0702451c 0000007c T CTRPluginFramework::Directory::~Directory()
0702451c 0000007c T CTRPluginFramework::Directory::~Directory()
07024598 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070245f8 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
070245f8 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
07024644 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07024658 000000a0 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070246f8 000000a4 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702479c 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07024870 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07024904 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070249ac 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
070249b8 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07024a48 00000118 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07024b60 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07024b9c 000000e8 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07024c84 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07024dd0 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07024dd0 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07024e28 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07024e28 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07024e44 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07024f60 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
07024fe4 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
0702504c 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07025100 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07025144 000001ec t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07025330 00000288 T CTRPluginFramework::Directory::_List() const
070255b8 000000d4 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0702568c 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07025768 0000000c T CTRPluginFramework::FwkSettings::Get()
07025774 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
07025840 00000010 T CTRPluginFramework::Process::GetHandle()
07025850 00000010 T CTRPluginFramework::Process::GetTitleID()
07025860 00000024 T CTRPluginFramework::Process::GetTextSize()
07025884 00000008 T CTRPluginFramework::Process::Pause()
0702588c 00000010 T CTRPluginFramework::Process::Play(unsigned long)
0702589c 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07025944 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
07025948 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07025994 0000001c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
070259b0 0000001c T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
070259cc 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
070259e8 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
07025a08 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
07025a28 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07025a48 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
07025a6c 00000064 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07025ad0 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07025b08 0000000c T CTRPluginFramework::HookContext::GetCurrent()
07025b14 00000028 T CTRPluginFramework::HookContext::GetCallCode()
07025b3c 00000048 T CTRPluginFramework::Hook::Hook()
07025b3c 00000048 T CTRPluginFramework::Hook::Hook()
07025b84 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07025b84 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07025bac 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07025bac 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07025bc0 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
07025c24 00000050 T CTRPluginFramework::Hook::~Hook()
07025c24 00000050 T CTRPluginFramework::Hook::~Hook()
07025c74 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
07025c90 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
07025cb8 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
07025cc8 0000001c T CTRPluginFramework::Hook::IsEnabled()
07025ce4 00000120 T CTRPluginFramework::Hook::Enable()
07025e04 00000030 T CTRPluginFramework::Hook::Disable()
07025e34 00000008 T CTRPluginFramework::Hook::GetContext() const
07025e3c 00000010 T CTRPluginFramework::System::IsNew3DS()
07025e4c 00000010 T CTRPluginFramework::System::Reboot()
07025e5c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07025eb4 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
07025f70 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
07026064 000000d4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07026138 00000008 T CTRPluginFramework::File::Tell() const
07026140 0000002c T CTRPluginFramework::File::Rewind() const
0702616c 00000030 T CTRPluginFramework::File::Flush() const
0702619c 00000064 T CTRPluginFramework::File::GetSize() const
07026200 00000008 T CTRPluginFramework::File::IsOpen() const
07026208 00000044 T CTRPluginFramework::File::File()
07026208 00000044 T CTRPluginFramework::File::File()
0702624c 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
070262c4 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
070262d8 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702636c 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026440 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070264c4 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026564 000000a4 T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07026608 0000006c T CTRPluginFramework::File::Close() const
07026674 00000184 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
070267f8 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
070267f8 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07026854 00000028 T CTRPluginFramework::Touch::IsDown()
0702687c 00000028 T CTRPluginFramework::Touch::GetPosition()
070268a4 00000020 T CTRPluginFramework::Time::AsSeconds() const
070268c4 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
070268ec 00000018 T CTRPluginFramework::Clock::Clock()
070268ec 00000018 T CTRPluginFramework::Clock::Clock()
07026904 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
07026930 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07026968 00000034 T CTRPluginFramework::Clock::Restart()
0702699c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0702699c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
070269a0 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
070269a4 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
070269d4 00000018 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
070269ec 00000008 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
070269f4 00000050 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release()
07026a44 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>&&) [clone .isra.0]
07026a78 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07026a78 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07026b24 00000048 T CTRPluginFramework::Task::Start() const
07026b6c 0000004c T CTRPluginFramework::Task::Start(void*) const
07026bb8 00000064 T CTRPluginFramework::Task::Wait() const
07026c1c 0000003c T CTRPluginFramework::Controller::Update()
07026c58 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07026c5c 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07026c5c 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07026cd0 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07026ce4 00000004 T CTRPluginFramework::PluginMenu::operator+=(CTRPluginFramework::MenuFolder const*) const
07026ce8 00000048 T CTRPluginFramework::PluginMenu::Run() const
07026d30 00000008 T CTRPluginFramework::PluginMenu::ShowWelcomeMessage(bool) const
07026d38 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07026d40 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07026d50 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07026d5c 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07026d5c 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07026d8c 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07026d8c 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07026da4 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026da4 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026de4 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07026de4 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07026e0c 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuFolder*) const
07026e1c 00000020 T CTRPluginFramework::MenuFolder::operator+=(CTRPluginFramework::MenuEntry const*)
07026e3c 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026e3c 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026e88 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026e88 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07026ed8 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07026ed8 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07026f08 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07026f10 00000038 W CTRPluginFramework::TextBox::~TextBox()
07026f10 00000038 W CTRPluginFramework::TextBox::~TextBox()
07026f48 00000020 W CTRPluginFramework::TextBox::~TextBox()
07026f68 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07026f68 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07026fb0 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07026fb0 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07026fec 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
07026fec 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
0702702c 0000000c T CTRPluginFramework::MessageBox::SetClear(CTRPluginFramework::ClearScreen)
07027038 00000008 T CTRPluginFramework::MessageBox::operator()() const
07027040 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07027098 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07027158 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07027158 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070271a0 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070271a0 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0702720c 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
0702720c 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
0702723c 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07027244 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07027260 00000044 T CTRPluginFramework::Keyboard::Open() const
070272a4 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
0702733c 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07027344 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
0702734c 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
07027354 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070273fc 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
070274cc 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07027540 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070275c8 000001f4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
070277bc 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07027864 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070278f4 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
070279b8 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07027abc 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07027b4c 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07027c10 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07027d14 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07027da4 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07027e68 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
07027f6c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07027fc4 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07027fcc 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07027fcc 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07027fe8 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07027fe8 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07028030 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07028060 0000001c T CTRPluginFramework::HotkeyManager::Count()
0702807c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070280fc 000000bc T CTRPluginFramework::Hotkey::AskForKeys()
070281b8 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07028234 00000138 T CTRPluginFramework::HotkeyManager::AskForKeys()
0702836c 000000f8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07028464 000000c4 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07028528 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07028670 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
070286a4 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
070286a4 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
070286b4 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
070286b4 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
070286d0 00000108 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
070287d8 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07028860 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
070288d0 0000001c W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
070288ec 00000060 W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&)
0702894c 000000d0 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
07028a1c 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07028a54 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07028ab8 00000110 T CTRPluginFramework::Color::Fade(float)
07028bc8 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07028c08 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
07028c84 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
07028ea4 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
07028f6c 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
07028f74 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07028fcc 0000005c t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
07029028 00000018 W CTRPluginFramework::ProcessImpl::UserProcessEventCallback(CTRPluginFramework::Process::Event)
07029040 00000028 T OnLoadCro
07029068 00000004 W CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
0702906c 000000ac T CTRPluginFramework::ThreadExit()
07029118 00000054 T abort
0702916c 0000009c T __entrypoint
07029208 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
070292ec 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0702936c 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
070293dc 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07029418 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
07029468 000006b8 T CTRPluginFramework::KeepThreadMain(void*)
07029b20 00000120 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07029c40 000001d8 T CTRPluginFramework::Initialize()
07029e18 00000044 T CTRPluginFramework::ThreadInit(void*)
07029e5c 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
07029ea4 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
07029ed0 000000b8 t NCSNDCmd_Add
07029f88 00000084 t NCSNDCmd_Execute.constprop.0
0702a00c 0000005c T ncsndNotifyAptEvent
0702a068 00000004 t ncsndAptHook
0702a06c 000001cc T ncsndInit
0702a238 000000ac T ncsndExit
0702a2e4 00000024 T ncsndInitializeSound
0702a308 00000260 T ncsndPlaySound
0702a568 00000040 T ncsndStopSound
0702a5a8 00000090 T ncsndIsPlaying
0702a638 T __aeabi_read_tp
0702a644 T LoadCROHooked
0702a658 T AR__ExecuteRoutine
0702a680 t stackBak
0702a688 T svcCustomBackdoor
0702a690 T svcConvertVAToPA
0702a698 T svcFlushDataCacheRange
0702a6a0 T svcInvalidateEntireInstructionCache
0702a6a8 T svcMapProcessMemoryEx
0702a6bc T svcUnmapProcessMemoryEx
0702a6c4 T svcControlProcess
0702a6cc 00000020 T __libctru_exit
0702a6ec 0000001c T __appExit
0702a708 0000003c T __syscall_getreent
0702a744 0000003c T __getThreadLocalStorage
0702a780 00000070 T __syscall_gettod_r
0702a7f0 00000034 T __syscall_nanosleep
0702a824 00000004 T __syscall_lock_acquire
0702a828 00000004 T __syscall_lock_release
0702a82c 00000004 T __syscall_lock_acquire_recursive
0702a830 00000004 T __syscall_lock_release_recursive
0702a834 00000054 T initThreadVars
0702a888 0000005c T __system_initSyscalls
0702a8e4 0000018c T __createThread
0702aa70 00000110 T __startThread
0702ab80 00000024 T threadGetHandle
0702aba4 0000002c T threadFree
0702abd0 00000024 T threadJoin
0702abf4 00000020 T threadGetCurrent
0702ac14 0000003c T threadExit
0702ac50 00000020 t _thread_begin
0702ac70 0000003c T fontEnsureMappedExtension
0702acac 0000004c T hidInitFake
0702acf8 0000003c T hidExitFake
0702ad34 0000002c T hidSetSharedMem
0702ad60 00000070 T plgLdrExit
0702add0 000000d4 T plgLdrInit
0702aea4 00000050 T PLGLDR__GetPluginPath
0702aef4 00000024 T PLGLDR__FetchEvent
0702af18 000000e8 T PLGLDR__Reply
0702b000 000000b0 T __system_allocateHeaps
0702b0b0 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
0702b0dc 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
0702b104 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
0702b258 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
0702b2d8 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
0702b300 00000018 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
0702b318 0000005c t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0702b374 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
0702b444 00000004 T __gsp__Update
0702b448 00000294 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
0702b6dc 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
0702b6f4 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
0702b714 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
0702b75c 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
0702b790 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
0702b7b4 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
0702b7d8 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
0702b814 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
0702b840 000000a4 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
0702b8e4 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
0702b918 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
0702b9c0 00000198 T CTRPluginFrameworkImpl::Services::GSP::Initialize()
0702bb58 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0702bb94 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0702bbb4 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
0702bbd4 00000014 t decltype (::new ((void*)(0)) CTRPluginFramework::AsmWrapper()) std::construct_at<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
0702bbe8 0000029c t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
0702be84 00000044 W CTRPluginFramework::Lock::~Lock()
0702be84 00000044 W CTRPluginFramework::Lock::~Lock()
0702bec8 000000d4 T CTRPluginFramework::HookManager::HookManager()
0702bec8 000000d4 T CTRPluginFramework::HookManager::HookManager()
0702bf9c 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
0702c010 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
0702c074 000000d0 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
0702c144 0000000c T CTRPluginFramework::HookManager::Lock()
0702c150 0000000c T CTRPluginFramework::HookManager::Unlock()
0702c15c 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
0702c1c4 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
0702c240 000000c8 T __hook__CheckTlsValue
0702c308 00000144 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
0702c44c 00000084 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
0702c4d0 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
0702c62c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
0702c638 00000044 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
0702c67c 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
0702c68c 0000003c t std::__shared_count<(__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)0> const&) [clone .isra.0]
0702c6c8 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0702c6c8 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0702c728 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0702c780 00000098 T CTRPluginFramework::Scheduler::Initialize()
0702c818 0000004c T CTRPluginFramework::Scheduler::Exit()
0702c864 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)0>&&) [clone .isra.0]
0702c8a4 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
0702ca48 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0702cb4c 00000148 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0702cc94 00000174 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0702ce08 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0702ce4c 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
0702ced4 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0702cef8 00000004 t addrMapNodeDestructor(rbtree_node*)
0702cefc 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0702d040 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0702d048 0000006c T CTRPluginFramework::Heap::Free(void*)
0702d0b4 0000000c T CTRPluginFramework::Heap::SpaceFree()
0702d0c0 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0702d0cc 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0702d0ec 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702d144 000002b4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702d3f8 00000030 W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short>(unsigned short const*, unsigned short const*, unsigned short*)
0702d428 000001ac W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0702d5d4 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702d5d4 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0702d698 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0702d6c8 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
0702d6fc 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
0702d708 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702d720 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0702d760 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
0702d7a4 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
0702d7b4 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
0702d7c8 00000004 T Kernel::Initialize()
0702d7cc 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
0702d7e4 0000000c T KProcess::GetCurrent()
0702d7f0 00000024 T KProcess::PatchCore2Access()
0702d814 0000002c T KProcess::PatchCategory(unsigned long)
0702d840 00000014 T KProcess__PatchCategory
0702d854 0000002c T KProcess::PatchMaxPriority(unsigned long)
0702d880 00000014 T KProcess__PatchMaxPriority
0702d894 00000028 T KProcess::PatchMaxThreads()
0702d8bc 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
0702d908 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
0702d99c 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0702d9d8 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
0702da10 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
0702da74 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
0702dae4 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0702db78 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
0702dc20 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
0702dc58 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
0702dc74 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
0702dc8c t _store_reg_loop
0702dcac 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
0702dcb8 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
0702dcb8 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
0702dce0 0000010c W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
0702ddec 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
0702de28 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
0702dee4 00000428 T CTRPluginFramework::ProcessImpl::Initialize()
0702e30c 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
0702e378 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
0702e458 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702e464 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702e498 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0702e498 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0702e538 00000050 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
0702e588 00000038 T CTRPluginFramework::EventManager::Clear()
0702e5c0 000001cc W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0702e790 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
0702e7f8 00000304 T CTRPluginFramework::EventManager::ProcessEvents()
0702eb00 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0702ebcc 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0702ebd4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702ec2c 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
0702ec34 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
0702ec38 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
0702ec3c 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
0702ec84 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0702eca8 00000044 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
0702ecec 00000124 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
0702ee10 00000214 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
0702f024 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0702f030 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0702f080 00000044 T CTRPluginFramework::Search::UpdateProgress()
0702f0c4 00000048 T CTRPluginFramework::Search::Cancel()
0702f10c 00000190 T CTRPluginFramework::Search::CheckNextRegion()
0702f29c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702f2f4 00000008 T CTRPluginFramework::Search::GetHeader() const
0702f2fc 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0702f344 0000000c T CTRPluginFramework::Search::GetType() const
0702f350 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0702f368 00000070 T CTRPluginFramework::Search::WriteHeader()
0702f3d8 00000058 T CTRPluginFramework::Search::WriteResults()
0702f430 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0702f478 0000010c W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0702f584 00000084 T CTRPluginFramework::Search::CreateIndexTable()
0702f608 0000013c T CTRPluginFramework::Search::ExecuteSearch()
0702f744 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0702f7c4 000001e4 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f7c4 000001e4 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f9a8 0000027c T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0702f9a8 0000027c T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0702fc24 00000238 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0702fe5c 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
0702fe88 00000028 W CTRPluginFramework::Mutex::~Mutex()
0702fe88 00000028 W CTRPluginFramework::Mutex::~Mutex()
0702feb0 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0702feb0 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0702ffb8 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0702ffc0 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0702ffe0 00000190 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07030170 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07030190 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
070301ac 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
070301c8 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
070301d8 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
070301e0 00000008 T CTRPluginFramework::PluginMenuImpl::ShowWelcomeMessage(bool)
070301e8 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
070301f0 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
070301f8 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
070301f8 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0703023c 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0703023c 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
07030264 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
07030264 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0703028c 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
070303c4 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
07030400 00000120 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07030520 0000077c T CTRPluginFramework::PluginMenuImpl::Run()
07030c9c 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07030da0 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07030da0 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07030e08 00000198 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
07030fa0 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
070310c0 000001a4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07031264 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
070312a0 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
070313d4 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
07031514 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07031520 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
07031534 0000014c W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07031534 0000014c W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07031680 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07031680 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07031844 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07031880 00000058 T CTRPluginFramework::Menu::CloseAll()
070318d8 00000030 T CTRPluginFramework::Menu::~Menu()
070318d8 00000030 T CTRPluginFramework::Menu::~Menu()
07031908 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
07031914 00000008 T CTRPluginFramework::Menu::GetFolder() const
0703191c 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
07031924 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
07031968 000003a4 T CTRPluginFramework::Menu::Draw() const
07031d10 000000a0 T CTRPluginFramework::Menu::_ScrollUp(int)
07031db0 000000a0 T CTRPluginFramework::Menu::_ScrollDown(int)
07031e50 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07032098 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07032204 00000068 T CTRPluginFramework::Menu::ShowNote()
0703226c 00000008 T CTRPluginFramework::Menu::CloseNote()
07032274 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0703227c 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0703227c 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07032360 00000128 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07032360 00000128 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07032488 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
070324c8 00000044 T CTRPluginFramework::Menu::Pop()
0703250c 00000108 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07032614 000000a8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
070326bc 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
070326c4 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
070326c4 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
070326f4 00000020 W CTRPluginFramework::MenuItem::~MenuItem()
07032714 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07032714 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
070327f8 00000020 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07032818 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
07032828 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
07032878 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
07032890 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
070328b4 000000b0 T CTRPluginFramework::MenuFolderImpl::Clear()
07032964 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07032974 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
07032994 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
070329ec 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070329ec 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032ac0 000000d8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032ac0 000000d8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07032b98 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07032ba8 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
07032bb8 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
07032bc8 00000030 t CTRPluginFramework::GetIndex(int)
07032bf8 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
07032d2c 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
07032da0 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07032da0 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07032e0c 00000094 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
07032ea0 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
0703306c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
07033098 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07033098 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
070330d0 00000110 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
070331e0 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
0703321c 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703321c 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07033378 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
070333d0 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
07033490 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0703357c 00000064 t __tcf_0
070335e0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07033638 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07033644 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0703396c 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07033aa0 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07033f38 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07034054 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
070340e4 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0703411c 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07034148 000000d4 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0703421c 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
070342a0 000000a4 T CTRPluginFramework::PluginMenuHome::Init()
07034344 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
070343a0 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
07034460 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07034460 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0703490c 000001b0 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07034abc 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07034b0c 00000088 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07034b98 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07034f44 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07035168 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0703517c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07035190 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
070351a4 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
070351a8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
070351ac 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
070351d4 00000064 t __tcf_0
07035238 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07035290 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
070352d0 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
070352f4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07035308 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0703531c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07035330 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07035344 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
07035358 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0703536c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
07035380 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
07035394 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
070353a8 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
070354f8 0000014c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07035644 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
07035684 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07035704 00000b2c T CTRPluginFramework::PluginMenuTools::InitMenu()
07036230 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
070363b0 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07036470 00000064 t CTRPluginFramework::MenuHotkeyModifier()
070364d4 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0703653c 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
07036644 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07036644 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
070367d4 000000a8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703687c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
070368ec 000000fc W std::__cxx11::to_string(int)
070369e8 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07036b78 0000015c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036cd4 00000048 t CTRPluginFramework::Reboot()
07036d1c 00000054 t CTRPluginFramework::Shutdown()
07036d70 0000012c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07036e9c 000001fc t CTRPluginFramework::UpdateScreenshotText()
07037098 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
070371c8 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703732c 0000049c t CTRPluginFramework::ScreenshotMenuCallback()
070377c8 00000058 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
07037820 000005c0 t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
07037de0 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07037e00 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
07037e48 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
07037e84 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07037e94 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
07037ea8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07037f00 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07037f00 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07037f28 00000020 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07037f48 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
07037f50 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
07037f64 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
07037f70 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
07037f78 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
07037f9c 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
07037fcc 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
07037fe8 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
07038050 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07038050 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0703813c 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0703813c 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0703822c 00000238 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
07038464 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
07038484 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07038484 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
070384a4 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
070384c4 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
0703851c 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0703851c 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
070385a0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070385a0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038600 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038600 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038660 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
07038664 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070386bc 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
070386fc 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07038760 000000c8 T CTRPluginFramework::GuideReader::_LoadBMP()
07038828 000003f4 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
07038c1c 00000348 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07038f64 000001e0 T CTRPluginFramework::GuideReader::GuideReader()
07038f64 000001e0 T CTRPluginFramework::GuideReader::GuideReader()
07039144 0000015c T CTRPluginFramework::GuideReader::Draw()
070392a0 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07039314 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703936c 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
070393ac 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
070394c4 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0703951c 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0703952c 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07039560 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0703958c 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
070395fc 0000010c W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07039708 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07039744 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070397c4 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07039824 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07039990 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07039990 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07039e00 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0703a064 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0703a0a4 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0703a14c 000002a0 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0703a3ec 0000015c t CTRPluginFramework::ClearSearchFolder()
0703a548 000000e8 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0703a630 00000520 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
0703ab50 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0703ab80 000002f0 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0703ae70 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703b21c 00000024 t fontGetSystemFont
0703b240 00000010 T CTRPluginFramework::Glyph::Width() const
0703b250 000004d4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0703b724 00000350 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0703ba74 000000c4 T CTRPluginFramework::Font::Initialize()
0703bb38 0000001c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
0703bb54 0000018c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
0703bce0 000000c0 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
0703bda0 00000138 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0703bed8 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0703bf64 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0703bf84 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0703bfcc 00000078 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
0703c044 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0703c044 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0703c058 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
0703c058 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
0703c080 00000024 T CTRPluginFramework::UIContainer::Draw()
0703c0a4 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
0703c0d8 00000108 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
0703c1e0 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
0703c214 00000094 T CTRPluginFramework::ComboBox::Draw()
0703c2a8 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
0703c2a8 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
0703c2fc 00000020 W CTRPluginFramework::ComboBox::~ComboBox()
0703c31c 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0703c31c 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
0703c368 0000003c T CTRPluginFramework::ComboBox::Clear()
0703c3a4 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0703c424 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703c474 000000a8 T CTRPluginFramework::ComboBox::operator()()
0703c51c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703c51c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703c520 00000014 T CTRPluginFramework::FloatingButton::Draw()
0703c534 00000014 T CTRPluginFramework::FloatingButton::operator()()
0703c548 00000018 T CTRPluginFramework::FloatingButton::~FloatingButton()
0703c560 000001ac T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
0703c70c 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703c70c 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0703c750 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask)
0703c7a4 0000000c T CTRPluginFramework::OSDImpl::Lock()
0703c7b0 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0703c7cc 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0703c7d8 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
0703c8c0 0000019c T CTRPluginFramework::OSDImpl::WaitFramePaused()
0703ca5c 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
0703cb08 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
0703cb38 00000084 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
0703cbbc 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
0703cc80 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703cc80 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703cdf8 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703cdf8 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703cf50 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
0703d210 00000210 T CTRPluginFramework::MessageBoxImpl::operator()()
0703d420 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0703d424 000002fc T CTRPluginFramework::TextBox::Draw()
0703d720 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
0703d74c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703d7a4 00000094 T CTRPluginFramework::TextBox::TextBox()
0703d7a4 00000094 T CTRPluginFramework::TextBox::TextBox()
0703d838 0000000c T CTRPluginFramework::TextBox::Open() const
0703d844 0000000c T CTRPluginFramework::TextBox::Close() const
0703d850 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0703d858 00000228 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0703da80 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0703da8c 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0703db20 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0703dbd4 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0703dc2c 000000a4 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
0703dcd0 0000023c T CTRPluginFramework::TextBox::_GetTextInfos()
0703df0c 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0703df0c 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0703e090 00000160 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703e1f0 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0703e214 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0703e238 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0703e25c 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0703e284 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0703e2ac 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0703e2d4 00000100 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
0703e3d4 0000199c T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0703fd70 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0703fe20 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0703fe40 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0703fe80 00000030 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
0703feb0 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0703feb0 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
0703fee4 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0703fee4 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
0703ff04 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
0703ff58 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
0703ffa0 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
0703ffa8 00000098 W std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_get_insert_unique_pos(unsigned long const&)
07040040 0000016c W std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_hint_unique<std::pair<unsigned long, ThreadVars*> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, ThreadVars*> >, std::pair<unsigned long, ThreadVars*>&&)
070401ac 00000224 T __ctrpf_getThreadVars
070403d0 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
07040408 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
07040440 0000000c T CTRPluginFramework::Sound::Sound()
07040440 0000000c T CTRPluginFramework::Sound::Sound()
0704044c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0704044c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07040460 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07040460 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07040494 000000c0 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
07040554 00000074 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
070405c8 00000058 T CTRPluginFramework::Sound::~Sound()
070405c8 00000058 T CTRPluginFramework::Sound::~Sound()
07040620 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
07040638 00000040 T CTRPluginFramework::Sound::Play(int, int)
07040678 00000008 T CTRPluginFramework::Sound::Play(int)
07040680 00000008 T CTRPluginFramework::Sound::Play()
07040688 000003ac t cwav_initialize
07040a34 000000f4 t cwav_stopImpl.part.0
07040b28 00000004 T cwavUseEnvironment
07040b2c 00000034 T cwavSetVAToPACallback
07040b60 00000050 T cwavLoad
07040bb0 0000049c T cwavPlay
0704104c 00000064 T cwavStop
070410b0 00000170 T cwavFree
07041220 00000004 T cwav_defaultVAToPA
07041224 00000004 T cwavEnvUseEnvironment
07041228 00000008 T cwavEnvGetEnvironment
07041230 00000004 T cwavEnvInitialize
07041234 00000004 T cwavEnvFinalize
07041238 00000014 T cwavEnvCompatibleEncoding
0704124c 00000008 T cwavEnvGetChannelAmount
07041254 00000018 T cwavEnvIsChannelAvailable
0704126c 000000f8 T cwavEnvPlay
07041364 00000004 T cwavEnvChannelIsPlaying
07041368 00000004 T cwavEnvStop
0704136c 0000002c W MemBlock::Create(unsigned char*, unsigned long)
07041398 00000034 W MemPool::DelBlock(MemBlock*)
070413cc 0000005c T MemPool::CoalesceRight(MemBlock*)
07041428 00000100 T MemPool::Allocate(MemChunk&, unsigned long, int)
07041528 00000100 T MemPool::Deallocate(MemChunk const&)
07041628 00000020 T MemPool::GetFreeSpace()
07041648 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07041648 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704170c 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
07041714 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
0704172c 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
0704172c 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07041754 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
07041824 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
070418e4 00000064 W CTRPluginFramework::Search::~Search()
070418e4 00000064 W CTRPluginFramework::Search::~Search()
07041948 00000044 T CTRPluginFramework::Search32::~Search32()
07041948 00000044 T CTRPluginFramework::Search32::~Search32()
0704198c 00000020 T CTRPluginFramework::Search32::~Search32()
070419ac 00000024 W CTRPluginFramework::Search::~Search()
070419d0 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
070419d0 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07041bd4 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07041bd4 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07041bf4 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07041bf4 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07041c88 00000124 W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07041dac 000001ac T CTRPluginFramework::Search32::SecondSearchSpecified()
07041f58 00000108 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
07042060 00000194 T CTRPluginFramework::Search32::SecondSearchUnknown()
070421f4 00000148 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0704233c 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07042388 0000013c T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
070424c4 0000013c T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07042600 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0704263c 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
070426a4 000000f0 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07042794 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
070427d0 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07042850 0000010c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0704295c 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070429a8 0000032c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
07042cd4 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07042f34 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070431ac 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704340c 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07043440 000002ec T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0704372c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07043784 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07043784 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
070437d0 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
07043880 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
07043918 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07043a08 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07043a88 00000390 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
07043e18 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07043f54 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
07043f7c 000000c8 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
07044044 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07044074 000000a0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07044114 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*) [clone .isra.0]
07044164 000002a0 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07044404 00000378 T CTRPluginFramework::GatewayRAMDumper::operator()()
0704477c 00000450 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07044bcc 00000454 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07045020 0000044c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704546c 00000618 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07045a84 000008b0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07046334 000008a8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07046bdc 00000868 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047444 00000c38 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704807c 00000848 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070488c4 000008a8 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704916c 00000894 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049a00 00000dac T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704a7ac 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704b410 00000718 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704bb28 000003fc T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704bf24 000006b8 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704c5dc 00000084 W envGetHandle
0704c660 00000050 W envDestroyHandles
0704c6b0 0000000c T __sync_init
0704c6bc 00000018 T __sync_fini
0704c6d4 0000002c T syncArbitrateAddressWithTimeout
0704c700 0000001c T LightLock_Init
0704c71c 000000b0 T LightLock_Lock
0704c7cc 00000040 T LightLock_Unlock
0704c80c 00000024 T RecursiveLock_Init
0704c830 00000030 T RecursiveLock_Lock
0704c860 00000078 T RecursiveLock_TryLock
0704c8d8 00000054 T RecursiveLock_Unlock
0704c92c 00000040 T LightEvent_Init
0704c96c 000000a4 T LightEvent_Clear
0704ca10 00000048 T LightEvent_Pulse
0704ca58 000000c8 T LightEvent_Signal
0704cb20 000000b0 T LightEvent_Wait
0704cbd0 00000014 T LightSemaphore_Init
0704cbe4 00000094 T LightSemaphore_Acquire
0704cc78 00000064 T LightSemaphore_Release
0704ccdc 00000074 T osConvertVirtToPhys
0704cd50 00000054 T osGetTimeRef
0704cda4 000000ec T osGetTime
0704ce90 00000094 T fontEnsureMapped
0704cf24 00000100 T fontGlyphIndexFromCodePoint
0704d024 00000070 T fontGetCharWidthInfo
0704d094 00000130 T srvInit
0704d1c4 00000058 T srvExit
0704d21c 000000a0 T srvGetServiceHandleDirect
0704d2bc 00000038 T srvGetServiceHandle
0704d2f4 00000038 T srvPublishToSubscriber
0704d32c 000000b4 t mappableFindAddressWithin
0704d3e0 00000028 T mappableInit
0704d408 00000080 T mappableAlloc
0704d488 00000004 T mappableFree
0704d48c 000000a4 T cfguInit
0704d530 0000003c T cfguExit
0704d56c 00000054 T CFGU_GetSystemLanguage
0704d5c0 000000f0 T gspExit
0704d6b0 00000024 W hidShouldUseIrrst
0704d6d4 0000018c T hidInit
0704d860 000000e8 T hidExit
0704d948 000002a4 T hidScanInput
0704dbec 00000010 T hidKeysHeld
0704dbfc 00000010 T hidKeysDown
0704dc0c 00000010 T hidKeysUp
0704dc1c 00000018 T hidTouchRead
0704dc34 0000008c T acInit
0704dcc0 0000003c T acExit
0704dcfc 000000a4 T amInit
0704dda0 0000003c T amExit
0704dddc 000000b8 T sslcInit
0704de94 00000048 T sslcExit
0704dedc 00000048 T sslcGenerateRandomData
0704df24 00000158 T aptSendCommand
0704e07c 00000030 T aptHook
0704e0ac 00000030 T aptUnhook
0704e0dc 00000028 T APT_PrepareToCloseApplication
0704e104 00000048 T APT_CloseApplication
0704e14c 0000007c T APT_CheckNew3DS
0704e1c8 00000048 T APT_GetSharedFont
0704e210 0000000c T srvPmGetSessionHandle
0704e21c 000000cc T fsInit
0704e2e8 0000003c T fsExit
0704e324 000000cc T FSUSER_OpenFile
0704e3f0 000000bc T FSUSER_DeleteFile
0704e4ac 000000f8 T FSUSER_RenameFile
0704e5a4 000000bc T FSUSER_DeleteDirectoryRecursively
0704e660 000000d4 T FSUSER_CreateFile
0704e734 000000c4 T FSUSER_CreateDirectory
0704e7f8 000000f8 T FSUSER_RenameDirectory
0704e8f0 000000b4 T FSUSER_OpenDirectory
0704e9a4 00000098 T FSUSER_OpenArchive
0704ea3c 00000058 T FSFILE_Read
0704ea94 00000060 T FSFILE_Write
0704eaf4 0000003c T FSFILE_GetSize
0704eb30 00000028 T FSFILE_SetSize
0704eb58 0000003c T FSFILE_Close
0704eb94 00000024 T FSFILE_Flush
0704ebb8 00000028 T FSFILE_SetPriority
0704ebe0 00000050 T FSDIR_Read
0704ec30 0000003c T FSDIR_Close
0704ec6c 00000010 T rbtree_init
0704ec7c 000001b4 t do_insert
0704ee30 00000008 T rbtree_insert
0704ee38 00000090 T rbtree_rotate
0704eec8 00000318 T rbtree_remove
0704f1e0 00000074 T rbtree_find
0704f254 00000054 T encode_utf16
0704f2a8 000000e0 T encode_utf8
0704f388 000000c0 T utf8_to_utf16
0704f448 00000064 T decode_utf16
0704f4ac 0000013c T decode_utf8
0704f5e8 T svcQueryMemory
0704f618 T svcExitProcess
0704f620 T svcCreateThread
0704f640 T svcExitThread
0704f648 T svcSleepThread
0704f650 T svcSetThreadPriority
0704f658 T svcReleaseMutex
0704f660 T svcCreateEvent
0704f674 T svcSignalEvent
0704f67c T svcClearEvent
0704f684 T svcMapMemoryBlock
0704f68c T svcUnmapMemoryBlock
0704f694 T svcCreateAddressArbiter
0704f6a8 T svcArbitrateAddress
0704f6c0 T svcArbitrateAddressNoTimeout
0704f6c8 T svcCloseHandle
0704f6d0 T svcWaitSynchronization
0704f6d8 T svcWaitSynchronizationN
0704f700 T svcDuplicateHandle
0704f714 T svcGetSystemTick
0704f71c T svcGetSystemInfo
0704f734 T svcGetProcessInfo
0704f74c T svcConnectToPort
0704f760 T svcSendSyncRequest
0704f768 T svcOpenProcess
0704f77c T svcGetProcessId
0704f790 T svcGetThreadId
0704f7a4 T svcBreak
0704f7ac T svcInvalidateProcessDataCache
0704f7b4 T svcFlushProcessDataCache
0704f7bc T svcKernelSetState
0704f7c4 T svcQueryProcessMemory
0704f7e8 00000164 T irrstInit
0704f94c 000000cc T irrstExit
0704fa18 000000b4 T irrstScanInput
0704facc 00000024 T irrstKeysHeld
0704faf0 0000005c T rbtree_node_next
0704fb4c 00000004 T operator delete(void*)
0704fb50 00000004 T operator delete(void*, std::nothrow_t const&)
0704fb54 00000004 T operator delete(void*, unsigned int)
0704fb58 00000004 T operator delete[](void*)
0704fb5c 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0704fb68 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0704fb74 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0704fb80 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
0704fb90 00000038 t (anonymous namespace)::init()
0704fbc8 00000024 t (anonymous namespace)::init_static_cond()
0704fbec 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704fbec 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704fc0c 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704fc0c 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704fc2c 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704fc2c 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704fc4c 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704fc4c 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704fc6c 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0704fc98 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0704fcc4 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0704fcf0 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0704fd1c 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
0704fd48 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
0704fd74 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
0704fda0 000001a4 T __cxa_guard_acquire
0704ff44 000000b0 T __cxa_guard_release
0704fff4 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704fff4 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07050014 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07050040 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07050040 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07050050 00000014 T std::get_new_handler()
07050064 0000005c T operator new(unsigned int)
070500c0 0000001c T operator new(unsigned int, std::nothrow_t const&)
070500dc 00000004 T operator new[](unsigned int)
070500e0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070500e0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07050100 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0705012c 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07050264 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
070502ec 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07050330 00000004 T std::type_info::~type_info()
07050330 00000004 T std::type_info::~type_info()
07050334 00000008 T std::type_info::__is_pointer_p() const
07050334 00000008 T std::type_info::__is_function_p() const
0705033c 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07050350 00000014 T std::__detail::_List_node_base::_M_unhook()
07050364 0000005c T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
070503c0 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
07050430 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
070506b4 0000002c T std::__throw_bad_alloc()
070506e0 0000002c T std::__throw_bad_array_new_length()
0705070c 00000040 T std::__throw_logic_error(char const*)
0705074c 00000040 T std::__throw_invalid_argument(char const*)
0705078c 00000040 T std::__throw_length_error(char const*)
070507cc 00000040 T std::__throw_out_of_range(char const*)
0705080c 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
0705081c 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
07050900 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
070509e0 00000044 T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
07050a24 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07050a78 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
07050a9c 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
07050ac0 0000000c T std::bad_alloc::what() const
07050acc 00000020 T std::bad_alloc::~bad_alloc()
07050acc 00000020 T std::bad_alloc::~bad_alloc()
07050aec 0000002c T std::bad_alloc::~bad_alloc()
07050b18 0000000c T std::bad_array_new_length::what() const
07050b24 00000020 T std::bad_array_new_length::~bad_array_new_length()
07050b24 00000020 T std::bad_array_new_length::~bad_array_new_length()
07050b44 0000002c T std::bad_array_new_length::~bad_array_new_length()
07050b70 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07050bcc 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07050be0 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07050be0 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07050c00 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07050c2c 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07050c90 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07050d0c 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07050de0 00000118 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
07050ef8 000000d4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
07050fcc 00000044 T __cxa_allocate_exception
07051010 00000038 T __cxa_free_exception
07051048 0000004c t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
07051094 T __cxa_end_cleanup
070510a4 0000012c T __cxa_type_match
070511d0 000000b4 T __cxa_begin_cleanup
07051284 000000b4 T __gnu_end_cleanup
07051338 000000cc T __cxa_begin_catch
07051404 000000e0 T __cxa_end_catch
070514e4 00000004 T std::exception::~exception()
070514e4 00000004 T std::exception::~exception()
070514e8 00000004 T std::bad_exception::~bad_exception()
070514e8 00000004 T std::bad_exception::~bad_exception()
070514ec 0000000c T transaction clone for std::exception::what() const
070514ec 0000000c T std::exception::what() const
070514f8 0000000c T transaction clone for std::bad_exception::what() const
070514f8 0000000c T std::bad_exception::what() const
07051504 00000018 T std::bad_exception::~bad_exception()
0705151c 0000003c t eh_globals_dtor(void*)
07051558 00000038 T __cxa_get_globals_fast
07051590 00000074 T __cxa_get_globals
07051604 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
07051644 00000038 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
0705167c 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
070517e8 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
07051840 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07051918 000006c8 T __gxx_personality_v0
07051fe0 00000014 T __cxxabiv1::__terminate(void (*)())
07051ff4 00000018 T std::terminate()
0705200c 0000000c T __cxxabiv1::__unexpected(void (*)())
07052018 00000018 T std::unexpected()
07052030 00000014 T std::get_terminate()
07052044 00000014 T std::get_unexpected()
07052058 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
070520b8 00000058 T __cxa_init_primary_exception
07052110 00000054 T __cxa_throw
07052164 000000b0 T __cxa_rethrow
07052214 00000008 T std::logic_error::what() const
07052214 00000008 T std::runtime_error::what() const
0705221c 00000098 T std::logic_error::~logic_error()
0705221c 00000098 T std::logic_error::~logic_error()
070522b4 00000098 T std::length_error::~length_error()
070522b4 00000098 T std::length_error::~length_error()
0705234c 00000098 T std::invalid_argument::~invalid_argument()
0705234c 00000098 T std::invalid_argument::~invalid_argument()
070523e4 00000098 T std::out_of_range::~out_of_range()
070523e4 00000098 T std::out_of_range::~out_of_range()
0705247c 000000a0 T std::logic_error::~logic_error()
0705251c 000000a0 T std::length_error::~length_error()
070525bc 000000a0 T std::invalid_argument::~invalid_argument()
0705265c 000000a0 T std::out_of_range::~out_of_range()
070526fc 000000d4 T std::logic_error::logic_error(char const*)
070526fc 000000d4 T std::logic_error::logic_error(char const*)
070527d0 00000020 T std::invalid_argument::invalid_argument(char const*)
070527d0 00000020 T std::invalid_argument::invalid_argument(char const*)
070527f0 00000020 T std::length_error::length_error(char const*)
070527f0 00000020 T std::length_error::length_error(char const*)
07052810 00000020 T std::out_of_range::out_of_range(char const*)
07052810 00000020 T std::out_of_range::out_of_range(char const*)
07052830 0000008c W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
070528bc 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
070528c0 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07052930 0000002c T __cxa_call_terminate
0705295c 00000138 T __cxa_call_unexpected
07052a98 0000027c T log2
07052d18 0000013c T ceil
07052e58 00000144 T floor
07052f9c 000000b8 T ceilf
07053054 000000c0 T floorf
07053114 00000068 T roundf
0705317c 00000024 t with_errno
070531a0 00000050 T __math_divzero
070531f0 0000001c T __math_invalid
0705320c 00000044 T __popcountsi2
07053250 00000030 T __aeabi_f2lz
07053250 00000030 T __fixsfdi
07053280 00000040 T __aeabi_f2ulz
07053280 00000040 T __fixunssfdi
070532c0 00000120 T __udivmoddi4
070533e0 00000018 t selfrel_offset31
070533f8 00000090 t search_EIT_table
07053488 00000040 t __gnu_unwind_get_pr_addr
070534c8 000000f4 t get_eit_entry
070535bc 00000088 t restore_non_core_regs
07053644 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
07053658 00000004 t _Unwind_DebugHook
0705365c 00000064 t unwind_phase2
070536c0 00000140 t unwind_phase2_forced
07053800 000000a4 T __gnu_Unwind_RaiseException
070538a4 00000028 T __gnu_Unwind_ForcedUnwind
070538cc 00000074 T __gnu_Unwind_Resume
07053940 00000020 T __gnu_Unwind_Resume_or_Rethrow
07053960 00000004 T _Unwind_Complete
07053964 00000018 T _Unwind_DeleteException
0705397c 0000005c T _Unwind_VRS_Get
070539d8 0000002c t _Unwind_GetGR
07053a04 0000005c T _Unwind_VRS_Set
07053a60 0000002c t _Unwind_SetGR
07053a8c 000000c0 T __gnu_Unwind_Backtrace
07053b4c 00000414 t __gnu_unwind_pr_common
07053f60 00000008 T __aeabi_unwind_cpp_pr0
07053f68 00000008 W __aeabi_unwind_cpp_pr1
07053f70 00000008 W __aeabi_unwind_cpp_pr2
07053f78 000003dc T _Unwind_VRS_Pop
07054354 00000064 t next_unwind_byte
070543b8 0000002c t _Unwind_GetGR.constprop.0
070543e4 00000004 t unwind_UCB_from_context
070543e8 00000418 T __gnu_unwind_execute
07054800 00000048 T __gnu_unwind_frame
07054848 00000010 T _Unwind_GetRegionStart
07054858 0000001c T _Unwind_GetLanguageSpecificData
07054874 00000008 T _Unwind_GetDataRelBase
0705487c 00000008 T _Unwind_GetTextRelBase
07054884 00000014 T atexit
07054898 00000020 T calloc
070548b8 000000c0 T _calloc_r
07054978 00000018 T malloc
07054990 00000018 T free
070549a8 000007e4 T _malloc_r
0705518c 0000000c T __malloc_lock
07055198 0000000c T __malloc_unlock
070551a4 00000020 T realloc
070551c4 000004a0 T _realloc_r
07055664 00000064 t sulp
070556c8 000013a8 T _strtod_l
07056a70 00000108 T strtof
07056b78 000001c4 t _strtoul_l.constprop.0
07056d3c 00000030 T _strtoul_r
07056d6c 00000034 T strtoul
07056da0 00000244 t _strtoull_l.constprop.0
07056fe4 00000030 T _strtoull_r
07057014 00000020 T memalign
07057034 0000014c T _memalign_r
07057180 00000018 T isspace
07057198 00000018 T isxdigit
070571b0 00000148 T _fclose_r
070572f8 00000234 T __sflush_r
0705752c 00000094 T _fflush_r
070575c0 0000001c t stdio_exit_handler
070575dc 0000005c t cleanup_stdio
07057638 00000154 t global_stdio_init.part.0
0705778c 0000005c T __sinit
070577e8 0000000c T __sfp_lock_acquire
070577f4 0000000c T __sfp_lock_release
07057800 00000070 T _fwalk_sglue
07057870 00000130 T __smakebuf_r
070579a0 000000cc T snprintf
07057a6c 00000064 T sprintf
07057ad0 00000044 T __sread
07057b14 00000008 T __seofread
07057b1c 00000068 T __swrite
07057b84 00000044 T __sseek
07057bc8 00000008 T __sclose
07057bd0 000000a4 T _vsnprintf_r
07057c74 00000038 T vsnprintf
07057cac 000000b0 T memcmp
07057d5c 00000150 T memmove
07057eac 000000f4 T memset
07057fa0 00000090 T strlen
07058030 000000e4 T strncmp
07058114 000000c4 T strncpy
070581d8 00000048 T strnlen
07058220 00000010 T ctime
07058230 00000020 T localtime
07058250 0000035c T localtime_r
070585ac 0000012c t iso_year_adjust
070586d8 00001174 t __strftime.isra.0
0705984c 00000030 T strftime
0705987c 0000004c T time
070598c8 00000254 T __tzcalc_limits
07059b1c 0000000c T __tz_lock
07059b28 0000000c T __tz_unlock
07059b34 00000010 T _tzset_unlocked
07059b44 0000066c T _tzset_unlocked_r
0705a1b0 00000024 T __locale_mb_cur_max
0705a1d4 0000000c T __errno
0705a1e0 00000084 T __libc_init_array
0705a264 000000f0 T strcpy
0705a354 000000e4 T memchr
0705a438 00000118 T memcpy
0705a550 00000010 T nan
0705a560 0000000c T nanf
0705a56c 000000b0 T __register_exitproc
0705a61c 0000000c T abs
0705a628 000000f8 T _malloc_trim_r
0705a720 000002e8 T _free_r
0705aa08 000000f0 t rshift
0705aaf8 00000814 T __gethex
0705b30c 0000004c T __match
0705b358 0000029c T __hexnan
0705b5f4 000000c8 T _findenv_r
0705b6bc 00000018 T _getenv_r
0705b6d4 0000000c T labs
0705b6e0 000002f8 T __utf8_mbtowc
0705b9d8 00000088 T _Balloc
0705ba60 0000001c T _Bfree
0705ba7c 000000f4 T __multadd
0705bb70 00000110 T __s2b
0705bc80 00000060 T __hi0bits
0705bce0 0000009c T __lo0bits
0705bd7c 000000ac T __i2b
0705be28 00000204 T __multiply
0705c02c 00000128 T __pow5mult
0705c154 00000140 T __lshift
0705c294 00000058 T __mcmp
0705c2ec 000001f0 T __mdiff
0705c4dc 00000068 T __ulp
0705c544 000000d0 T __b2d
0705c614 00000120 T __d2b
0705c734 00000078 T __ratio
0705c7ac 00000088 T __copybits
0705c834 0000005c T __any_on
0705c890 000001a4 t _strtol_l.part.0
0705ca34 00000060 T _strtol_r
0705ca94 000000f0 T __utf8_wctomb
0705cb84 00000074 T siscanf
0705cbf8 000000cc T sniprintf
0705ccc4 0000067c t get_arg
0705d340 00000188 T __ssprint_r
0705d4c8 00002220 T _svfiprintf_r
0705f6e8 00000050 t get_arg
0705f738 000000d4 T _sungetc_r
0705f80c 0000006c T __ssrefill_r
0705f878 000000c4 T _sfread_r
0705f93c 00002324 T __ssvfiscanf_r
07061c60 0000067c t get_arg
070622e0 00003344 T _svfprintf_r
07065624 000000f4 T __sccl
07065718 000000a8 T __submore
070657c0 00000020 T asctime
070657e0 00000080 T asctime_r
07065860 0000000c T __gettzinfo
0706586c 00000268 T gmtime_r
07065ad4 00000024 T _localeconv_r
07065af8 00000088 T frexp
07065b80 0000005c T __assert_func
07065bdc 000001b0 t quorem
07065d90 000011f8 T _dtoa_r
07066f88 0000000c T __env_lock
07066f94 0000000c T __env_unlock
07066fa0 0000022c t _strtoll_l.constprop.0
070671cc 00000030 T _strtoll_r
070671fc 000000bc T _mbrtowc_r
070672b8 00000094 T _wcrtomb_r
0706734c 00000028 T _wcsrtombs_r
07067374 00000008 T iswspace
0706737c 00000038 T iswspace_l
070673b4 0000003c T fiprintf
070673f0 00000064 T siprintf
07067454 0000067c t get_arg
07067ad0 00000030 T __sprint_r
07067b00 0000230c T _vfiprintf_r
07069e0c 000000b8 t __sbprintf
07069ec4 000004b4 T __sfvwrite_r
0706a378 00000134 T __swsetup_r
0706a4ac 00000188 T _wcsnrtombs_l
0706a634 00000068 T _wcsnrtombs_r
0706a69c 0000008c T category
0706a728 00000078 T _fstat_r
0706a7a0 0000002c T __getreent
0706a7cc 00000030 T _gettimeofday_r
0706a7fc 0000003c T __get_handle
0706a838 000000f4 T _close_r
0706a92c 00000008 t null_write
0706a934 00000008 T _isatty_r
0706a93c 00000084 T _lseek_r
0706a9c0 00000040 T nanosleep
0706aa00 00000080 T _read_r
0706aa80 00000078 W _sbrk_r
0706aaf8 0000001c T __libc_lock_acquire
0706ab14 0000001c T __libc_lock_release
0706ab30 0000001c T __libc_lock_acquire_recursive
0706ab4c 0000001c T __libc_lock_release_recursive
0706ab68 00000080 T _write_r
0706abe8 00000038 T __aeabi_d2lz
0706abe8 00000038 T __fixdfdi
0706ac20 00000040 T __aeabi_d2ulz
0706ac20 00000040 T __fixunsdfdi
0706ac60 T _fini
0706b693 000000c9 V std::__detail::__to_chars_10_impl<unsigned long>(char*, unsigned int, unsigned long)::__digits
0706b934 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
0706b954 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
0706b974 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
0706b9d0 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0706bb50 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0706bb58 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0706bc33 00000a00 r font
0706c634 0000001c R vtable for CTRPluginFramework::TouchKey
0706c7fc 0000001c R vtable for CTRPluginFramework::Button
0706c818 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
0706c844 00000058 r CTRPluginFramework::g_OSDPattern
0706c89c 0000001c R vtable for CTRPluginFramework::NumericTextBox
0706cd2c 00000040 r RegNames
0706cd6c 00000010 r shift_names
0706cd7c 00000040 r cond_names
0706ce1c 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
0706d690 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
0706d698 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0706d6a0 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
0706d6a8 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
0706d6bc 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
0706d6c8 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0706d90c 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0706d928 00000008 R CTRPluginFramework::Time::Zero
0706d930 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)0>
0706d94c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0706d9dc 00000004 R CTRPluginFramework::Color::SkyBlue
0706d9e0 00000004 R CTRPluginFramework::Color::Orange
0706d9e4 00000004 R CTRPluginFramework::Color::LimeGreen
0706d9e8 00000004 R CTRPluginFramework::Color::ForestGreen
0706d9ec 00000004 R CTRPluginFramework::Color::Gainsboro
0706d9f0 00000004 R CTRPluginFramework::Color::DimGrey
0706d9f4 00000004 R CTRPluginFramework::Color::DeepSkyBlue
0706d9f8 00000004 R CTRPluginFramework::Color::DarkGrey
0706d9fc 00000004 R CTRPluginFramework::Color::Brown
0706da00 00000004 R CTRPluginFramework::Color::BlackGrey
0706da04 00000004 R CTRPluginFramework::Color::Purple
0706da08 00000004 R CTRPluginFramework::Color::Green
0706da0c 00000004 R CTRPluginFramework::Color::Gray
0706da10 00000004 R CTRPluginFramework::Color::Silver
0706da14 00000004 R CTRPluginFramework::Color::Magenta
0706da18 00000004 R CTRPluginFramework::Color::Cyan
0706da1c 00000004 R CTRPluginFramework::Color::Yellow
0706da20 00000004 R CTRPluginFramework::Color::Blue
0706da24 00000004 R CTRPluginFramework::Color::Lime
0706da28 00000004 R CTRPluginFramework::Color::Red
0706da2c 00000004 R CTRPluginFramework::Color::White
0706da30 00000004 R CTRPluginFramework::Color::Black
0706daad 00000384 r Settings15_array
0706de31 00000384 r UnCheckedCheckbox_array
0706e1b5 00000384 r Unsplash15_array
0706e539 000009c4 r Plus25_array
0706eefd 000009c4 r GameControllerFilled25_array
0706f8c1 00000384 r About15_array
0706fc45 000009c4 r Cut25_array
07070609 00000640 r CloseWindow20_array
07070c49 00000384 r Controller15_array
07070fcd 00000384 r ClearSymbolFilled15_array
07071351 000009c4 r ClipboardFilled25_array
07071d15 00000384 r EnterKeyFilled15_array
07072099 000009c4 r CutFilled25_array
07072a5d 00000e10 r DefaultKeyboardCustomIcon_array
0707386d 00000384 r Search15_array
07073bf1 00000384 r CapsLockOn15_array
07073f75 000009c4 r TrashFilled25_array
07074939 00000384 r RAM15_array
07074cbd 00000384 r More15_array
07075041 000009c4 r InfoFilled25_array
07075a05 00000640 r CloseWindowFilled20_array
07076045 00000384 r HandCursor15_array
070763c9 000009c4 r AddFavoriteFilled25_array
07076d8d 00000384 r EnterKey15_array
07077111 000009c4 r Duplicate25_array
07077ad5 00000384 r File15_array
07077e59 000009c4 r AddFavorite25_array
0707881d 000009c4 r Edit25_array
070791e1 000009c4 r DuplicateFilled25_array
07079ba5 000009c4 r Save25_array
0707a569 000009c4 r Clipboard25_array
0707af2d 000009c4 r Info25_array
0707b8f1 000009c4 r EditFilled25_array
0707c2b5 000009c4 r KeyboardFilled25_array
0707cc79 000009c4 r PlusFilled25_array
0707d63d 00000384 r ClearSymbol15_array
0707d9c1 00000384 r Shutdown15_array
0707dd45 00000384 r Maintenance15_array
0707e0c9 00000384 r CheckedCheckbox_array
0707e44d 00000384 r Grid15_array
0707e7d1 000009c4 r Keyboard25_array
0707f195 00000384 r CapsLockOnFilled15_array
0707f519 00000384 r UserManualFilled15_array
0707f89d 000009c4 r Trash25_array
07080261 00000384 r GameController15_array
070805e5 00000384 r Star15_array
07080969 000009c4 r GameController25_array
0708132d 00001900 r Rocket40_array
07082c2d 00000384 r FolderFilled_array
07082fb1 00000384 r Restart15_array
0708346c 00000014 r CTRPluginFramework::defaultSoundFiles
070834f8 00000038 R vtable for CTRPluginFramework::Search
07083544 00000014 V vtable for CTRPluginFramework::MenuItem
07083558 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0708357c 00000038 r CTRPluginFramework::stable
070835b4 00000038 r CTRPluginFramework::ktable
07083c6a 000000c9 V std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
07083d33 00000023 r CTRPluginFramework::g_copyrightText
07083d56 0000001e r CTRPluginFramework::g_ctrpfText
07083d74 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
07083d90 0000001c R vtable for CTRPluginFramework::MenuEntryTools
07083f08 0000001c R vtable for CTRPluginFramework::ComboBox
07083f24 0000001c R vtable for CTRPluginFramework::FloatingButton
07083f4c 0000001c R vtable for CTRPluginFramework::TextBox
07083f94 00000038 R vtable for CTRPluginFramework::Search32
07084228 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
07084250 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
0708425c 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
07084288 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
07084294 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
070842c0 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
070842cc 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
070842f4 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
07084300 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
07084314 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
07084328 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
0708433c 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
07084350 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07084374 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07084380 00000014 R vtable for __gnu_cxx::recursive_init_error
07084394 00000001 R std::nothrow
07084398 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
070843c0 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
070843cc 0000002c R vtable for __cxxabiv1::__si_class_type_info
070843f8 0000000d R typeinfo name for std::type_info
07084408 00000008 R typeinfo for std::type_info
07084410 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
07084420 00000404 R std::__detail::__prime_list
07084824 00000018 V typeinfo name for std::_Sp_make_shared_tag
07084864 0000000d R typeinfo name for std::bad_alloc
07084874 0000000c R typeinfo for std::bad_alloc
07084880 00000014 R vtable for std::bad_alloc
070848b0 00000019 R typeinfo name for std::bad_array_new_length
070848cc 0000000c R typeinfo for std::bad_array_new_length
070848d8 00000014 R vtable for std::bad_array_new_length
070848ec 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07084910 0000000c R typeinfo for __cxxabiv1::__class_type_info
0708491c 0000002c R vtable for __cxxabiv1::__class_type_info
0708496c 0000000d R typeinfo name for std::exception
0708497c 00000008 R typeinfo for std::exception
07084984 00000012 R typeinfo name for std::bad_exception
07084998 0000000c R typeinfo for std::bad_exception
070849a4 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
070849c4 00000008 R typeinfo for __cxxabiv1::__forced_unwind
070849cc 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
070849f0 00000008 R typeinfo for __cxxabiv1::__foreign_exception
070849f8 00000014 R vtable for std::bad_exception
07084a0c 00000010 R typeinfo name for std::logic_error
07084a1c 0000000c R typeinfo for std::logic_error
07084a28 00000015 R typeinfo name for std::invalid_argument
07084a40 0000000c R typeinfo for std::invalid_argument
07084a4c 00000011 R typeinfo name for std::length_error
07084a60 0000000c R typeinfo for std::length_error
07084a6c 00000011 R typeinfo name for std::out_of_range
07084a80 0000000c R typeinfo for std::out_of_range
07084a8c 00000014 R vtable for std::logic_error
07084aa0 00000014 R vtable for std::invalid_argument
07084ab4 00000014 R vtable for std::length_error
07084ac8 00000014 R vtable for std::out_of_range
07084b20 00000890 R __log2_data
070853c4 00000014 r fpinan.0
070853d8 00000014 r fpi.1
070853f0 00000028 r tinytens
07085418 00000101 R _ctype_
0708551c 00000060 R __month_lengths
07085810 000000fc R _C_time_locale
0708596c 00000100 R __hexdig
07085ab0 0000000c r p05.0
07085ac0 00000028 R __mprec_bigtens
07085ae8 000000c8 R __mprec_tens
07085bdc 00000010 r zeroes.0
07085bec 00000010 r blanks.1
07085bfc 0000006c R __action_table
07085c68 0000006c R __state_table
07085cd4 00000100 R __chclass
07085dd4 00000022 r basefix.0
07085e08 00000010 r zeroes.0
07085e18 00000010 r blanks.1
07085e48 00000024 r mon_name.0
07085e6c 00000015 r day_name.1
07085f1c 00000010 r zeroes.0
07085f2c 00000010 r blanks.1
07085f3c 00003528 r categories
0708946c 00000070 R dotab_stdnull
070894dc R __tdata_align
0708966c R __exidx_start
070898b4 R __exidx_end
070898b4 00000004 D cwavCurrentVAPAConvCallback
070898b8 00000004 D CTRPluginFramework::Screenshot::Screens
070898bc 00000004 D CTRPluginFramework::Screenshot::Hotkeys
070898c0 00000001 D CTRPluginFramework::SystemImpl::Language
070898c4 00000004 D CTRPluginFramework::RendererPriv::g_customColor
070898c8 000001f4 D opcode_names
07089abc 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
07089ac0 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
07089ac4 00000018 d CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07089adc 00000004 D CTRPluginFramework::FwkSettings::Header
07089ae0 00000001 D CTRPluginFramework::g_keepRunning
07089ae4 00000004 D g_charPerSheet
07089ae8 00000004 D Settings15
07089aec 00000004 D UnCheckedCheckbox
07089af0 00000004 D Unsplash15
07089af4 00000004 D Plus25
07089af8 00000004 D GameControllerFilled25
07089afc 00000004 D About15
07089b00 00000004 D Cut25
07089b04 00000004 D CloseWindow20
07089b08 00000004 D Controller15
07089b0c 00000004 D ClearSymbolFilled15
07089b10 00000004 D ClipboardFilled25
07089b14 00000004 D EnterKeyFilled15
07089b18 00000004 D CutFilled25
07089b1c 00000004 D DefaultKeyboardCustomIcon
07089b20 00000004 D Search15
07089b24 00000004 D CapsLockOn15
07089b28 00000004 D TrashFilled25
07089b2c 00000004 D RAM15
07089b30 00000004 D More15
07089b34 00000004 D InfoFilled25
07089b38 00000004 D CloseWindowFilled20
07089b3c 00000004 D HandCursor15
07089b40 00000004 D AddFavoriteFilled25
07089b44 00000004 D EnterKey15
07089b48 00000004 D Duplicate25
07089b4c 00000004 D File15
07089b50 00000004 D AddFavorite25
07089b54 00000004 D Edit25
07089b58 00000004 D DuplicateFilled25
07089b5c 00000004 D Save25
07089b60 00000004 D Clipboard25
07089b64 00000004 D Info25
07089b68 00000004 D EditFilled25
07089b6c 00000004 D KeyboardFilled25
07089b70 00000004 D PlusFilled25
07089b74 00000004 D ClearSymbol15
07089b78 00000004 D Shutdown15
07089b7c 00000004 D Maintenance15
07089b80 00000004 D CheckedCheckbox
07089b84 00000004 D Grid15
07089b88 00000004 D Keyboard25
07089b8c 00000004 D CapsLockOnFilled15
07089b90 00000004 D UserManualFilled15
07089b94 00000004 D Trash25
07089b98 00000004 D GameController15
07089b9c 00000004 D Star15
07089ba0 00000004 D GameController25
07089ba4 00000004 D Rocket40
07089ba8 00000004 D FolderFilled
07089bac 00000004 D Restart15
07089bb0 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
07089bb1 00000001 D CTRPluginFramework::EventManager::_refresh
07089bb4 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
07089bb8 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
07089bbc 00000004 d kCount
07089bc0 00000004 d kInterval
07089bc4 00000004 d kDelay
07089bc8 00000004 D __cxxabiv1::__unexpected_handler
07089bcc 00000004 D __cxxabiv1::__terminate_handler
07089bd0 00000004 D __malloc_sbrk_base
07089bd4 00000004 D __malloc_trim_threshold
07089bd8 00000408 D __malloc_av_
07089fe0 0000000c D __sglue
07089fec 00000008 D _tzname
07089ff4 0000016c D __global_locale
0708a160 00000004 D _impure_ptr
0708a168 00000120 D _impure_data
0708a288 00000058 d tzinfo
0708a2e0 00000004 D environ
0708a2e4 00001000 d handles
0708b2e4 0000000c d __stderr_handle
0708b2f0 0000000c d __stdout_handle
0708b2fc 0000000c d __stdin_handle
0708b308 0000008c D devoptab_list
0708b3a8 d _GLOBAL_OFFSET_TABLE_
0708b3b4 D __tdata_lma
0708b3c0 d __frame_dummy_init_array_entry
0708b3c0 D __init_array_start
0708b3c0 B __preinit_array_end
0708b3c0 B __preinit_array_start
0708b3c0 D __tdata_lma_end
0708b42c d __do_global_dtors_aux_fini_array_entry
0708b42c D __init_array_end
0708b48c D __bss_start__
0708b48c 00000004 B CTRPluginFramework::offset
0708b490 00000004 B CTRPluginFramework::data32
0708b494 00000002 B CTRPluginFramework::data16
0708b496 00000001 B CTRPluginFramework::data8
0708b498 00000004 B CTRPluginFramework::cmp32
0708b49c 00000002 B CTRPluginFramework::cmp16
0708b4a0 00000004 B CTRPluginFramework::Pmenu
0708b4a4 00000018 B CTRPluginFramework::CTRPFname[abi:cxx11]
0708b4bc 00000018 B CTRPluginFramework::about1[abi:cxx11]
0708b4d4 00000018 b CTRPluginFramework::NewLINE
0708b4ec 00000018 B CTRPluginFramework::about2[abi:cxx11]
0708b504 00000018 B CTRPluginFramework::about3[abi:cxx11]
0708b51c 00000018 B CTRPluginFramework::about4[abi:cxx11]
0708b534 00000018 B CTRPluginFramework::about5[abi:cxx11]
0708b54c 00000018 B CTRPluginFramework::about6[abi:cxx11]
0708b564 00000018 B CTRPluginFramework::taiyaki[abi:cxx11]
0708b57c 00000004 b ncsndMutex
0708b580 00000004 b ncsndCmdCurOff
0708b584 00000004 b ncsndCmdStartOff
0708b588 00000004 B ncsndSharedMem
0708b58c 00000004 B ncsndCSNDHandle
0708b590 00000004 B ncsndChannels
0708b594 00000004 b ncsndRefCount
0708b598 00000010 B ncsndOffsets
0708b5a8 00000004 B ncsndSharedMemSize
0708b5ac 00000004 b ncsndSharedMemBlock
0708b5b0 00000001 b ncsndCookieHooked
0708b5b4 0000000c b ncsndCookie
0708b5c0 b saved_stack
0708b5c8 00000004 b cwavListCount
0708b5cc 00000004 b cwavList
0708b5d0 00000004 b cwavAddedToList
0708b5d4 b completed.1
0708b5d8 b object.0
0708b5f0 00000004 b CTRPluginFramework::isReady
0708b5f4 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708b5fc 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708b604 00000008 B CTRPluginFramework::Screenshot::_task
0708b610 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
0708b618 00000008 B CTRPluginFramework::Screenshot::_timer
0708b620 00000004 B CTRPluginFramework::Screenshot::_display
0708b624 00000004 B CTRPluginFramework::Screenshot::_filecount
0708b628 00000004 B CTRPluginFramework::Screenshot::_mode
0708b62c 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
0708b630 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0708b634 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0708b64c 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
0708b668 00000008 B CTRPluginFramework::Screenshot::Timer
0708b670 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708b674 00000008 b CTRPluginFramework::g_sleepEvent
0708b67c 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0708b680 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0708b684 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0708b688 00000001 B CTRPluginFramework::SystemImpl::IsCitra
0708b689 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0708b68a 00000001 B _g_isCitra
0708b68c 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708b690 00000004 B CTRPluginFramework::ScreenImpl::Top
0708b694 000000ac b CTRPluginFramework::_botBuf
0708b740 000000ac b CTRPluginFramework::_topBuf
0708b7ec 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708b7f0 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708b7f8 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708b800 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708b808 00000004 b CTRPluginFramework::__converter
0708b80c 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0708b810 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0708b820 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708b824 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708b834 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708b838 00000004 B CTRPluginFramework::__g_hexEditor
0708b83c 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
0708b840 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708b844 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708b848 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708b850 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708b854 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708b864 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b868 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708b870 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708b874 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708b884 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708b888 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708b898 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708b89c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708b8ac 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708b8b0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708b8c0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708b8c4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708b8d4 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708b8e0 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708b8ec 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708b8f8 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708b8fc 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708b904 00000004 b CTRPluginFramework::__pmARinstance
0708b908 00000004 b CTRPluginFramework::g_radioId
0708b90c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708b910 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0708b920 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708b924 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708b930 00000028 B CTRPluginFramework::Window::TopWindow
0708b958 00000028 B CTRPluginFramework::Window::BottomWindow
0708b980 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708b984 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708b988 00000050 b CTRPluginFramework::g_fpsCounter
0708b9d8 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
0708b9e0 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
0708b9e8 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708b9f0 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708b9f8 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708ba00 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
0708ba01 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
0708ba02 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708ba04 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
0708ba24 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
0708ba30 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708ba3c 0000000c B CTRPluginFramework::OSDImpl::Notifications
0708ba48 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708ba6c 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708ba78 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708ba90 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708baa8 00000004 B CTRPluginFramework::OSDImpl::OSDHook
0708baac 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708bab0 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708bab4 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708bab8 0000000c B CTRPluginFramework::g_codeTypes
0708bac4 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708bac8 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0708bad4 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708bad8 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
0708bae4 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
0708bae5 00000001 b CTRPluginFramework::g_newCondDataToggle
0708bae6 00000001 b CTRPluginFramework::g_condAgainstData
0708bae8 00000004 b CTRPluginFramework::__arCodeEditor
0708baec 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0708baed 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0708baf0 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0708bb08 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0708bb20 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0708bb38 000000a8 B CTRPluginFramework::Preferences::Settings
0708bbe0 00000008 B CTRPluginFramework::Preferences::Backlights
0708bbe8 00000008 B CTRPluginFramework::Preferences::Flags
0708bbf0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0708bbf4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0708bbf8 000009c4 b CTRPluginFramework::g_rng
0708c5bc 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708c5c0 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
0708c5c4 00000004 B CTRPluginFramework::Process::OnPauseResume
0708c5c8 00000004 B CTRPluginFramework::Process::exceptionCallback
0708c5cc 00000004 B CTRPluginFramework::System::OnAbort
0708c5d0 00000004 B CTRPluginFramework::Controller::_keysReleased
0708c5d4 00000004 B CTRPluginFramework::Controller::_keysHeld
0708c5d8 00000004 B CTRPluginFramework::Controller::_keysDown
0708c5dc 00000004 b CTRPluginFramework::g_runningInstance
0708c5e0 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c5e4 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c5e8 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c5ea 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0708c5ec 0000001c b CTRPluginFramework::g_dummy
0708c608 00000180 b CTRPluginFramework::g_keyName
0708c788 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
0708c7a4 00000004 b g_onLoadCroLock
0708c7a8 00000004 b g_onSharedMemMapHook
0708c7ac 00000004 b g_onLoadCroHook
0708c7b0 00000008 b CTRPluginFramework::g_mainThread
0708c7b8 00000004 B CTRPluginFramework::g_keepEvent
0708c7bc 00000004 B CTRPluginFramework::g_keepThreadHandle
0708c7c0 00000004 B CTRPluginFramework::g_continueGameEvent
0708c7c8 00000008 B CTRPluginFramework::_sdmcArchive
0708c7d0 00001000 b CTRPluginFramework::keepThreadStack
0708d7d0 00000004 b g_mainThreadVars
0708d7d4 00000001 b properInit
0708d7d5 00000001 b fakeInit
0708d7d8 00000004 b plgLdrRefCount
0708d7dc 00000004 b plgReply
0708d7e0 00000004 b plgEvent
0708d7e4 00000004 b plgLdrArbiter
0708d7e8 00000004 b plgLdrHandle
0708d7ec 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
0708d7f0 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
0708d7f4 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
0708d7fc 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
0708d804 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
0708d808 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
0708d810 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
0708d818 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
0708d820 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
0708d824 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
0708d828 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
0708d82c 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
0708d830 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
0708d834 0000001c B CTRPluginFramework::HookManager::_singleton
0708d850 000000a8 B CTRPluginFramework::Scheduler::_singleton
0708d8f8 00000008 b CTRPluginFramework::Heap::g_heapPool
0708d900 0000000c b CTRPluginFramework::Heap::_mutex
0708d90c 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0708d910 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0708d914 0000000c b sAddrMap
0708d920 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0708d938 0000000c B CTRPluginFramework::FSPath::FSMutex
0708d944 00000044 b CTRPluginFramework::g_previousException
0708d988 00000004 B CTRPluginFramework::ProcessImpl::processEventCallback
0708d98c 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
0708d990 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
0708d998 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708d9a4 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708d9b0 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708d9c0 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0708d9c4 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708da28 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708da2c 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708da30 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708da38 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708da3c 00000004 B CTRPluginFramework::ProcessImpl::Status
0708da40 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708da44 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708da48 00000004 B CTRPluginFramework::EventManager::_firstTouch
0708da4c 00000001 B CTRPluginFramework::EventManager::_isTouching
0708da50 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
0708da54 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
0708da60 00000004 B CTRPluginFramework::_pool
0708da64 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708da68 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
0708da74 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708da78 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708da7c 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708da80 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708da84 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708da88 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708da90 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708da98 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708daa0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708daa4 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708daac 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708dab0 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708dab8 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
0708dabc 00000004 b CTRPluginFramework::g_screenshotEntry
0708dac0 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708dac4 00000004 b CTRPluginFramework::g_OpenFileLock
0708dac8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708dad0 00000040 b CTRPluginFramework::g_hookExportFile
0708db10 00000004 b CTRPluginFramework::g_HookMode
0708db14 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
0708db18 00000008 b CTRPluginFramework::g_textXpos
0708db20 00000004 b CTRPluginFramework::g_mode
0708db24 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708db28 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708db38 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708db3c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0708db4c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708db50 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
0708db60 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
0708db7c 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
0708db80 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
0708db84 0000000c B CTRPluginFramework::Font::_mutex
0708db90 00000004 B CTRPluginFramework::g_glyphAllocated
0708db94 00000004 B CTRPluginFramework::g_fontAllocated
0708db98 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
0708dba0 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
0708dba1 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0708dba4 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
0708dbb0 00000004 b CTRPluginFramework::g_context
0708dbb4 00000001 b CTRPluginFramework::ToggleFloat
0708dbb5 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708dbb8 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708dbbc 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708dbc0 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708dbc4 00000008 B CTRPluginFramework::ARHandler::Storage
0708dbcc 00000010 B CTRPluginFramework::ARHandler::Data
0708dbdc 00000008 B CTRPluginFramework::ARHandler::Offset
0708dbe8 00000fa0 b CTRPluginFramework::arStack
0708eb88 00000018 b __threads
0708eba0 0000000c b __mutex
0708ebac 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708ebb0 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708ebc0 00000001 b CTRPluginFramework::g_progressLoop
0708ebc4 00000004 b arbiter
0708ebc8 00000004 b sharedFontAddr
0708ebcc 00000004 B g_sharedFont
0708ebd0 00000004 b srvRefCount
0708ebd4 00000004 b srvHandle
0708ebd8 00000004 b currentAddr
0708ebdc 00000004 b maxAddr
0708ebe0 00000004 b minAddr
0708ebe4 00000004 b cfguRefCount
0708ebe8 00000004 b cfguHandle
0708ebec 00000001 b gspRunEvents
0708ebf0 00000004 b gspEventThread
0708ebf4 00000004 b gspEvent
0708ebf8 00000001 b gspGpuRight
0708ebfc 00000004 b gspSharedMem
0708ec00 00000004 b gspSharedMemHandle
0708ec04 00000004 b gspRefCount
0708ec08 00000004 b gspGpuHandle
0708ec0c 00000001 b usingIrrst
0708ec10 00000004 b hidRefCount
0708ec14 00000006 b gRate
0708ec1c 00000006 b aVec
0708ec24 00000004 b cPos
0708ec28 00000004 b tPos
0708ec2c 00000004 b kRepeat
0708ec30 00000004 b kUp
0708ec34 00000004 b kDown
0708ec38 00000004 b kHeld
0708ec3c 00000004 b kOld
0708ec40 00000004 B hidSharedMem
0708ec44 00000014 B hidEvents
0708ec58 00000004 B hidMemHandle
0708ec5c 00000004 B hidHandle
0708ec60 00000004 b acRefCount
0708ec64 00000004 b acHandle
0708ec68 00000004 b amRefCount
0708ec6c 00000004 b amHandle
0708ec70 00000004 b __sslc_refcount
0708ec74 00000004 B __sslc_servhandle
0708ec78 00000001 b flagValue.0
0708ec79 00000001 b flagInit.1
0708ec7c 00000004 b serviceName.6
0708ec80 0000000c b aptFirstHook
0708ec8c 00000004 b aptLockHandle
0708ec90 00000004 b srvPmHandle
0708ec98 00000080 b fsExemptArchives
0708ed18 00000004 b fsuRefCount
0708ed1c 00000004 b fsuHandle
0708ed20 00000004 V __ctru_heap_size
0708ed24 00000004 B __ctru_linear_heap
0708ed28 00000004 B __ctru_heap
0708ed2c 00000004 b irrstRefCount
0708ed30 00000004 b csPos
0708ed34 00000004 b kHeld
0708ed38 00000004 B irrstSharedMem
0708ed3c 00000004 B irrstEvent
0708ed40 00000004 B irrstMemHandle
0708ed44 00000004 B irrstHandle
0708ed48 00000004 b (anonymous namespace)::get_static_cond()::once
0708ed50 00000008 b (anonymous namespace)::fake_cond
0708ed58 00000004 b (anonymous namespace)::static_cond
0708ed5c 00000004 b (anonymous namespace)::get_static_mutex()::once
0708ed60 00000010 b (anonymous namespace)::fake_mutex
0708ed70 00000004 b (anonymous namespace)::static_mutex
0708ed74 00000004 b (anonymous namespace)::__new_handler
0708ed78 0000001c b (anonymous namespace)::emergency_pool
0708ed94 00000004 b init
0708ed98 00000001 B __eh_globals_init::_S_init
0708ed9c 0000000c b (anonymous namespace)::eh_globals
0708eda8 00000010 V std::string::_Rep::_S_empty_rep_storage
0708edb8 00000028 B __malloc_current_mallinfo
0708ede0 00000004 B __malloc_max_total_mem
0708ede4 00000004 B __malloc_max_sbrked_mem
0708ede8 00000004 B __malloc_top_pad
0708edec 0000000c b __malloc_recursive_mutex
0708edf8 0000000c b __sfp_recursive_mutex
0708ee08 00000168 B __sf
0708ef70 00000004 B __stdio_exit_handler
0708ef74 00000004 b __tz_mutex
0708ef78 00000004 b prev_tzenv
0708ef7c 0000000c b __tzname_dst
0708ef88 0000000c b __tzname_std
0708ef94 00000004 B _timezone
0708ef98 00000004 B _daylight
0708ef9c 00000190 B __atexit0
0708f12c 00000004 B __atexit
0708f130 0000000c B __atexit_recursive_mutex
0708f13c 00000004 b initial_env
0708f140 0000000c b __env_recursive_mutex
0708f14c 00000004 b __hndl_lock
0708f150 00000004 B fake_heap_start
0708f154 00000004 B fake_heap_end
0708f158 00000004 b heap_start.0
0708f15c B __tls_start
0708f188 B __bss_end__
0708f188 A __end__
0708f188 B __tls_end
